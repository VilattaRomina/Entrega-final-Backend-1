<div class="row mb-4">
  <div class="col">
    <h1>Productos</h1>
    <p class="text-muted">Explora nuestro catálogo</p>
  </div>
</div>

<div class="row mb-4">
  <div class="col-md-4">
    <label for="categoryFilter" class="form-label">Filtrar por categoría:</label>
    <select id="categoryFilter" class="form-select" onchange="applyFilters()">
      <option value="">Todas las categorías</option>
      <option value="smartphones">Smartphones</option>
      <option value="laptops">Laptops</option>
      <option value="tablets">Tablets</option>
      <option value="audio">Audio</option>
      <option value="cameras">Cámaras</option>
      <option value="wearables">Wearables</option>
      <option value="gaming">Gaming</option>
      <option value="monitors">Monitores</option>
      <option value="accessories">Accesorios</option>
    </select>
  </div>
  <div class="col-md-3">
    <label for="sortFilter" class="form-label">Ordenar por precio:</label>
    <select id="sortFilter" class="form-select" onchange="applyFilters()">
      <option value="">Sin ordenar</option>
      <option value="asc">Menor a mayor</option>
      <option value="desc">Mayor a menor</option>
    </select>
  </div>
  <div class="col-md-3">
    <label for="statusFilter" class="form-label">Disponibilidad:</label>
    <select id="statusFilter" class="form-select" onchange="applyFilters()">
      <option value="">Todos</option>
      <option value="true">En stock</option>
      <option value="false">Sin stock</option>
    </select>
  </div>
  <div class="col-md-2 d-flex align-items-end">
    <button class="btn btn-outline-secondary w-100" onclick="clearFilters()">Limpiar filtros</button>
  </div>
</div>

<div class="row">
  {{#each products}}
    <div class="col-md-4 mb-4">
      <div class="card h-100">
        {{#if this.thumbnails.[0]}}
          <img src="{{this.thumbnails.[0]}}" class="card-img-top" alt="{{this.title}}" style="height: 200px; object-fit: cover;">
        {{else}}
          <div class="card-img-top bg-secondary d-flex align-items-center justify-content-center" style="height: 200px;">
            <i class="fas fa-image fa-3x text-white"></i>
          </div>
        {{/if}}
        <div class="card-body d-flex flex-column">
          <h5 class="card-title">{{this.title}}</h5>
          <p class="card-text text-muted">{{this.category}}</p>
          <p class="card-text"><strong>${{this.price}}</strong></p>
          <p class="card-text">
            {{#if this.status}}
              <span class="badge bg-success">En stock: {{this.stock}}</span>
            {{else}}
              <span class="badge bg-danger">Sin stock</span>
            {{/if}}
          </p>
          <div class="mt-auto">
            <a href="/products/{{this._id}}" class="btn btn-primary btn-sm w-100 mb-2">Ver detalle</a>
            <button class="btn btn-outline-success btn-sm w-100" onclick="addToCart('{{this._id}}')">
              <i class="fas fa-shopping-cart"></i> Agregar al carrito
            </button>
          </div>
        </div>
      </div>
    </div>
  {{else}}
    <div class="col-12">
      <div class="alert alert-info">No hay productos disponibles</div>
    </div>
  {{/each}}
</div>

{{#if pagination}}
<nav aria-label="Paginación de productos">
  <ul class="pagination justify-content-center">
    <li class="page-item {{#unless pagination.hasPrevPage}}disabled{{/unless}}">
      <a class="page-link" href="?page={{pagination.prevPage}}&limit={{pagination.limit}}">Anterior</a>
    </li>
    
    <li class="page-item active">
      <span class="page-link">Página {{pagination.page}} de {{pagination.totalPages}}</span>
    </li>
    
    <li class="page-item {{#unless pagination.hasNextPage}}disabled{{/unless}}">
      <a class="page-link" href="?page={{pagination.nextPage}}&limit={{pagination.limit}}">Siguiente</a>
    </li>
  </ul>
</nav>
{{/if}}

<script>
let cartId = localStorage.getItem('cartId');

if (!cartId) {
  fetch('/api/carts', {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' }
  })
  .then(res => res.json())
  .then(data => {
    if (data.status === 'success') {
      cartId = data.payload._id;
      localStorage.setItem('cartId', cartId);
    }
  });
}

function addToCart(productId) {
  if (!cartId) {
    alert('Creando carrito, intenta de nuevo en un momento');
    return;
  }
  
  fetch(`/api/carts/${cartId}/products/${productId}`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ quantity: 1 })
  })
  .then(res => res.json())
  .then(data => {
    if (data.status === 'success') {
      alert('✅ Producto agregado al carrito');
    } else {
      alert('❌ Error: ' + data.message);
    }
  })
  .catch(err => {
    alert('❌ Error al agregar producto');
    console.error(err);
  });
}

function applyFilters() {
  const category = document.getElementById('categoryFilter').value;
  const sort = document.getElementById('sortFilter').value;
  const status = document.getElementById('statusFilter').value;
  
  let url = '/products?limit={{pagination.limit}}';
  
  const queryObj = {};
  if (category) queryObj.category = category;
  if (status !== '') queryObj.status = status === 'true';
  
  if (Object.keys(queryObj).length > 0) {
    url += '&query=' + encodeURIComponent(JSON.stringify(queryObj));
  }
  
  if (sort) {
    url += '&sort=' + sort;
  }
  
  window.location.href = url;
}

function clearFilters() {
  window.location.href = '/products';
}

window.addEventListener('DOMContentLoaded', function() {
  const urlParams = new URLSearchParams(window.location.search);
  const sort = urlParams.get('sort');
  const queryParam = urlParams.get('query');
  
  if (sort) {
    document.getElementById('sortFilter').value = sort;
  }
  
  if (queryParam) {
    try {
      const query = JSON.parse(queryParam);
      if (query.category) {
        document.getElementById('categoryFilter').value = query.category;
      }
      if (query.status !== undefined) {
        document.getElementById('statusFilter').value = query.status.toString();
      }
    } catch (e) {
      console.error('Error parsing query:', e);
    }
  }
});
</script>

